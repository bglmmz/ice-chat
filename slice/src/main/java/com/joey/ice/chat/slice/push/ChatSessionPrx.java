// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `PushChat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.joey.ice.chat.slice.push;

public interface ChatSessionPrx extends Glacier2.SessionPrx
{
    public void setCallback(ChatRoomCallbackPrx cb);

    public void setCallback(ChatRoomCallbackPrx cb, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, Callback_ChatSession_setCallback __cb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, java.util.Map<String, String> __ctx, Callback_ChatSession_setCallback __cb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_setCallback(ChatRoomCallbackPrx cb, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public void end_setCallback(Ice.AsyncResult __result);

    public long send(String message)
        throws com.joey.ice.chat.slice.common.InvalidMessageException;

    public long send(String message, java.util.Map<String, String> __ctx)
        throws com.joey.ice.chat.slice.common.InvalidMessageException;

    public Ice.AsyncResult begin_send(String message);

    public Ice.AsyncResult begin_send(String message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_send(String message, Ice.Callback __cb);

    public Ice.AsyncResult begin_send(String message, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_send(String message, Callback_ChatSession_send __cb);

    public Ice.AsyncResult begin_send(String message, java.util.Map<String, String> __ctx, Callback_ChatSession_send __cb);

    public Ice.AsyncResult begin_send(String message, 
                                      IceInternal.Functional_LongCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_send(String message, 
                                      IceInternal.Functional_LongCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_send(String message, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_LongCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_send(String message, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_LongCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public long end_send(Ice.AsyncResult __result)
        throws com.joey.ice.chat.slice.common.InvalidMessageException;
}
